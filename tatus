[1mdiff --git a/demo_circles/src/app.cpp b/demo_circles/src/app.cpp[m
[1mindex e3ef045..48d0c21 100644[m
[1m--- a/demo_circles/src/app.cpp[m
[1m+++ b/demo_circles/src/app.cpp[m
[36m@@ -1,50 +1,74 @@[m
 #include "app.h"[m
 [m
 #include <iostream>[m
[32m+[m[32m#include <fstream>[m
 #include <string>[m
[31m-#include <cmath>[m
[32m+[m[32m#include <cstdint>[m
 [m
 #include "tef.h"[m
 [m
 #include "components.h"[m
 #include "systems.h"[m
[32m+[m[32m#include "utils.h"[m
 [m
[32m+[m[32mstatic std::ofstream log_file;[m
[32m+[m
[32m+[m[32m// Log callback, writes to log_file in the CSV format[m
 void tef_log_cb([m
     tef::log_level_t log_level,[m
     const std::string& world_name,[m
     std::thread::id thread_id,[m
     const std::string& message)[m
 {[m
[31m-    std::ostringstream o;[m
[31m-    const char* separator = " | ";[m
[31m-    [m
[32m+[m[32m    // Replace " with "" because CSV[m
[32m+[m[32m    std::string world_name_copy = str_replace(world_name, "\"", "\"\"");[m
[32m+[m[32m    std::string message_copy = str_replace(message, "\"", "\"\"");[m
[32m+[m
[32m+[m[32m    // time[m
[32m+[m[32m    log_file << '"' << str_from_time() << "\",";[m
[32m+[m
[32m+[m[32m    // log_level[m
     switch (log_level)[m
     {[m
     case tef::log_level_t::error:[m
[31m-        o << "error" << separator;[m
[32m+[m[32m        log_file << "error,";[m
         break;[m
[31m-    case tef::log_level_t::warn:[m
[31m-        o << "warn" << separator;[m
[32m+[m[32m    case tef::log_level_t::warning:[m
[32m+[m[32m        log_file << "warning,";[m
         break;[m
     case tef::log_level_t::info:[m
[31m-        o << "info" << separator;[m
[32m+[m[32m        log_file << "info,";[m
         break;[m
     case tef::log_level_t::verbose:[m
[31m-        o << "verbose" << separator;[m
[32m+[m[32m        log_file << "verbose,";[m
         break;[m
     default:[m
         break;[m
     }[m
 [m
[31m-    o << world_name << separator;[m
[31m-    o << thread_id << separator;[m
[31m-    o << message;[m
[32m+[m[32m    // world_name, thread_id, message[m
[32m+[m[32m    log_file << '"' << world_name_copy << "\",";[m
[32m+[m[32m    log_file << thread_id << ',';[m
[32m+[m[32m    log_file << '"' << message_copy << "\"\n";[m
 [m
[31m-    std::cout << o.str() << std::endl;[m
[32m+[m[32m    // Flush[m
[32m+[m[32m    log_file.flush();[m
 }[m
 [m
 void app_t::run()[m
 {[m
[32m+[m[32m    // Log file[m
[32m+[m[32m    log_file.open("./log.csv", std::ofstream::out | std::ofstream::trunc);[m
[32m+[m[32m    if (!log_file.is_open())[m
[32m+[m[32m    {[m
[32m+[m[32m        throw std::runtime_error("A log file could not be created/opened.");[m
[32m+[m[32m    }[m
[32m+[m[32m    else[m
[32m+[m[32m    {[m
[32m+[m[32m        log_file << "time,log_level,world_name,thread_id,message\n";[m
[32m+[m[32m        log_file.flush();[m
[32m+[m[32m    }[m
[32m+[m
     // Create a world[m
     tef::world_t world("Circles", tef_log_cb);[m
 [m
[36m@@ -69,9 +93,9 @@[m [mvoid app_t::run()[m
     // Add systems[m
     {[m
         world.add_system(std::make_shared<s_movement>("Movement"));[m
[31m-        //world.add_system(std::make_shared<s_circle_renderer>("Circle Renderer"));[m
[32m+[m[32m        world.add_system(std::make_shared<s_circle_renderer>("Circle Renderer"));[m
     }[m
 [m
     // Run[m
[31m-    world.run(10, .5);[m
[32m+[m[32m    world.run(10, 5);[m
 }[m
